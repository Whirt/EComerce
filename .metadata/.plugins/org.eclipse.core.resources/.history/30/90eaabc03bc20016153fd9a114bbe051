/**
 * Si usa questa classe come base per la finestra
 * di modifica e aggiunta prodotto.
 * 
 * Nel caso si scelga aggiunta non necessita di nulla.
 * Nel caso si scelga modifica necessita l'indice dell'elemento
 * 
 * In questo modo admin commands potr√† sfruttare il polimorfismo
 */

package adminelements;

import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.FlowLayout;
import java.awt.Font;

import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;

import product.ProductType;
import table.ECommerceTable;

public abstract class ProductHandlerFrame extends JFrame {

	protected static final int TXTAREACOL = 24 ;
	protected static final int TXTAREAROW = 4 ;
	protected static final int TXTMAXLEN = 25 ;
	
	// color settings
	protected static final int R = 28 ;
	protected static final int G = 106 ;
	protected static final int B = 208 ;
	protected Color backgroundColor ;
	
	// frame settings
	private static final int START_X = 100 ;
	private static final int START_Y = 80 ;
	private static final int WIDTH = 360 ;
	private static final int HEIGHT = 310 ;
	
	// constructor part
	protected ECommerceTable productTable ;
	
	// title
	protected Font titleFont ;
	protected JLabel titleLabel ;
	
	// panel components
	protected JPanel panel ;
	
	protected JLabel nameLabel ;
	protected JLabel brandLabel ;
	protected JLabel codeLabel ;
	protected JLabel priceLabel ;
	protected JLabel discountLabel ;
	protected JLabel detailLabel ;
	protected JLabel categoryLabel ;
	protected JLabel specialSaleLabel ;
	protected JTextField nameTextField ;
	protected JTextField brandTextField ;
	protected JTextField codeTextField ;
	protected JTextField priceTextField ;
	protected JTextField discountTextField ;
	protected JTextArea detailTextArea ;
	protected JComboBox<ProductType> categoryComboBox ;
	protected JCheckBox specialSaleCheck ;
	
	public ProductHandlerFrame(String title, 
							   ECommerceTable productTable) {
		super(title) ;
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE) ;
		setBounds(START_X, START_Y, WIDTH, HEIGHT) ;
		setResizable(false) ;
		
		backgroundColor = new Color(R, G, B) ;
		
		this.productTable = productTable ;
		
		// setting up components
		nameLabel = new JLabel("Name") ;
		brandLabel = new JLabel("Brand") ;
		codeLabel = new JLabel("Code") ;
		priceLabel = new JLabel("Price") ;
		discountLabel = new JLabel("Discount") ;
		detailLabel = new JLabel("Details") ;
		categoryLabel = new JLabel("Class") ;
		specialSaleLabel = new JLabel("Special Sale") ;
		nameTextField = new JTextField("", TXTMAXLEN) ;
		brandTextField = new JTextField("", TXTMAXLEN) ;
		codeTextField = new JTextField("", TXTMAXLEN) ;
		priceTextField = new JTextField("", TXTMAXLEN) ;
		discountTextField = new JTextField("", TXTMAXLEN) ;
		detailTextArea = new JTextArea(TXTAREAROW, TXTAREACOL) ;
		categoryComboBox = new JComboBox<ProductType>(ProductType.values()) ;
		specialSaleCheck = new JCheckBox() ;
		// setting background color
		nameLabel.setBackground(backgroundColor) ;
		brandLabel.setBackground(backgroundColor) ;
		codeLabel.setBackground(backgroundColor) ;
		priceLabel.setBackground(backgroundColor) ;
		discountLabel.setBackground(backgroundColor) ;
		detailLabel.setBackground(backgroundColor) ;
		specialSaleCheck.setBackground(backgroundColor) ;
		// text color
		nameLabel.setForeground(Color.WHITE) ;
		brandLabel.setForeground(Color.WHITE) ;
		codeLabel.setForeground(Color.WHITE) ;
		priceLabel.setForeground(Color.WHITE) ;
		discountLabel.setForeground(Color.WHITE) ;
		detailLabel.setForeground(Color.WHITE) ;
		categoryLabel.setForeground(Color.WHITE) ;
		specialSaleLabel.setForeground(Color.WHITE) ;
		
		// adding up
		panel = new JPanel() ;
		FlowLayout layout = new FlowLayout(FlowLayout.RIGHT) ;
		panel.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
		panel.setLayout(layout) ;
		panel.setBackground(backgroundColor) ;
		panel.add(nameTextField) ; panel.add(nameLabel) ; 
	    panel.add(brandTextField) ; panel.add(brandLabel) ;
		panel.add(codeTextField) ; panel.add(codeLabel) ;
		panel.add(priceTextField) ; panel.add(priceLabel) ;
		panel.add(discountTextField) ; panel.add(discountLabel) ;
		panel.add(detailTextArea) ; panel.add(detailLabel) ;
		panel.add(specialSaleCheck) ; panel.add(specialSaleLabel) ;
		panel.add(categoryComboBox) ; panel.add(categoryLabel);
	}
	public ProductHandlerFrame(ECommerceTable productTable) {
		this("Product Frame Handler", productTable) ;
	}
	private ProductHandlerFrame() { ; }
	
}
