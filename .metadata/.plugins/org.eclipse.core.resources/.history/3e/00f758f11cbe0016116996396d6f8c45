package productManager;

import java.util.Vector;

import product.Product;

public class ProductManager<E extends Product> {

	// Main product container
	private Vector<E> products ;
	
	public ProductManager() {
		products = new Vector<E>() ;
	}
	
	/** Return the product in vector at position index.
	 * @param index
	 * @return E */
	public E getProduct(int index) {
		if (index < 0 || index >= products.size())
			return null ;
		return products.get(index) ;
	}
	
	/** Add newProduct class, if newProduct is null or
	 * newProduct already exist in vector  false will be returned.
	 * @param newProduct
	 * @return boolean */
	public boolean add(E newProduct) {
		if (newProduct == null)
			return false ;
		for (int i = 0 ; i < products.size() ; i++) {
			String examinedProdName = products.get(i).getName();
			String newProdName = newProduct.getName() ;
			boolean sameName = examinedProdName.equals(newProdName) ;
			// If same name, compare brand
			if (sameName) {
				String examinedProdBrand = products.get(i).getBrand() ;
				String newProdBrand = newProduct.getBrand() ;
				boolean sameBrand = examinedProdBrand.equals(newProdBrand) ;
				if (sameBrand) // if also same brand just add one to stock
					products.get(i).incQuantity() ;
			}
		}
		return true ;
	}
}
