/**
 * Object Writer Reader
 *
 * Classe che scrive e legge tramite operazioni di serializzazione
 * e deserializazione.
 * 
 * IDEA:
 * L'amministratore può caricare e salvare i dati del contenuto
 * della tabella dei prodotti.
 * 
 * L'utente invece carica il proprio carrello in automatico
 * con un operazione di IO che avviene
 * nel momento del login, il file contenente i dati del carrello
 * è specificato dal nomeLogin + cart
 * 
 * Gli elementi che consistono di IO
 * - sono Tabella dei prodotti
 * - carrello e quindi relativa tabella dei prodotti
 * - utente password
 * 
 * 
 */

package IO;

import java.io.FileOutputStream ;
import java.io.File;
import java.io.FileInputStream ;
import java.io.ObjectOutputStream ;
import java.io.ObjectInputStream ;
import java.io.IOException ;

public class ObjectWR
{
	
	public static void wirte(Object obj, File file) throws IOException {
		 FileOutputStream fos = new FileOutputStream(file) ;
	     ObjectOutputStream oos = new ObjectOutputStream(fos) ;
	     oos.writeObject(obj) ;
	     oos.close() ;
	}
    public static void write(Object obj, String name_file) throws IOException {
        FileOutputStream fos = new FileOutputStream(name_file) ;
        ObjectOutputStream oos = new ObjectOutputStream(fos) ;
        oos.writeObject(obj) ;
        oos.close() ;
    }

    public static Object read(String name_file)
    throws IOException, ClassNotFoundException {
        FileInputStream fis = new FileInputStream(name_file) ;
        ObjectInputStream ios = new ObjectInputStream(fis) ;
        Object obj = (Object)ios.readObject() ;
        ios.close() ;
        return obj ;
    }
    public static Object read(File file)
    throws IOException, ClassNotFoundException {
    	FileInputStream fis = new FileInputStream(file) ;
    	ObjectInputStream ios = new ObjectInputStream(fis) ;
        Object obj = (Object)ios.readObject() ;
        ios.close() ;
        return obj ;
    }
}