package cart;

import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BoxLayout;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumnModel;

public class CartTableView extends JPanel implements ActionListener {

	private static final int TXTMAXLEN = 10 ;
	// table data dimension
	private static final int QUANTITY_COLUMN_WIDTH = 10 ;
	private static final int ROW_HEIGHT = 50 ;
	
	private CartTableModel tableModel ;
	private JTable tableView ;
	private JScrollPane scrollPane ;
	
	// Table cell components
	private JButton removeButton ;
	private JButton incButton ;
	private JButton decButton ;
	
	// Bottom 
	private JPanel bottomPanel ;
	private JLabel totalCostLabel ;
	private JTextField totalCostTextField ;
	private JLabel numProductLabel ;
	private JTextField numProductTextField ;
	
	private JButton payButton ;
	
	public CartTableView() {
		super() ;
		
		// table cell components
		removeButton = new JButton("Remove") ;
		removeButton.addActionListener(this) ;
		incButton = new JButton("Inc") ;
		incButton.addActionListener(this) ;
		decButton = new JButton("Dec") ;
		decButton.addActionListener(this) ;
		// Table settings
		tableModel = new CartTableModel() ;
		tableView = new JTable(tableModel) ;
		
		// center all of its column
		DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer() ;
		dtcr.setHorizontalAlignment(SwingConstants.CENTER) ;
		for (int i = 0 ; i < tableModel.getColumnCount() ; i++)
			tableView.getColumnModel().getColumn(i).setCellRenderer( dtcr) ;
		
		/* // adding button to table column
		tableView.getColumnModel().getColumn(CartTableModel.QUANTITY_COLUMN)
			.setCellEditor(new DefaultCellEditor(removeButton)) ; */
		
		// other settings
		tableView.setRowHeight(ROW_HEIGHT) ;
		TableColumnModel columnModel = tableView.getColumnModel() ;
		columnModel.getColumn(CartTableModel.QUANTITY_COLUMN).
			setPreferredWidth(QUANTITY_COLUMN_WIDTH) ;
		
		// wrapping table to scrollPane
		scrollPane = new JScrollPane(tableView) ;

		// bottom panel handling
		totalCostLabel = new JLabel("Total cost") ;
		totalCostTextField = new JTextField("", TXTMAXLEN) ;
		totalCostTextField.setEditable(false) ;
		numProductLabel = new JLabel("Number products") ;
		numProductTextField = new JTextField("", TXTMAXLEN) ;
		numProductTextField.setEditable(false) ;
		FlowLayout bottomLayout = new FlowLayout(FlowLayout.LEFT) ;
		bottomPanel = new JPanel() ;
		bottomPanel.setLayout(bottomLayout) ;
		bottomPanel.add(totalCostLabel) ;
		bottomPanel.add(totalCostTextField) ;
		bottomPanel.add(numProductLabel) ;
		bottomPanel.add(numProductTextField) ;
		
		payButton = new JButton("Pay") ;
		payButton.addActionListener(this) ;
		
		// mixing up
		BoxLayout outermostLayout = new BoxLayout(this, BoxLayout.Y_AXIS) ;
		setLayout(outermostLayout) ;
		add(scrollPane) ;
		add(bottomPanel) ;
		add(payButton) ;
	}
	
	@Override
	public void actionPerformed(ActionEvent e) {
		Object source = e.getSource() ;
		if (source == removeButton)
			System.out.println("Remove button pressed") ;
		if (source == incButton)
			System.out.println("Increment button pressed") ;
		if (source == decButton)
			System.out.println("Decrement button pressed") ;
		if (source == payButton) {

			System.out.println("Payment pressed") ;	
		}
	}
}